format = """
[](#9A348E)\
$os\
$username\
[](bg:#DA627D fg:#9A348E)\
$directory\
[](fg:#DA627D bg:#FCA17D)\
$git_branch\
$git_commit\
$git_state\
$git_status\
$git_metrics\
[](fg:#FCA17D bg:#86BBD8)\
$c\
$elixir\
$elm\
$golang\
$gradle\
$haskell\
$java\
$julia\
$nodejs\
$nim\
$rust\
$scala\
$python\
$terraform\
$package\
[](fg:#86BBD8 bg:#06969A)\
$docker_context\
[](fg:#06969A bg:#33658A)\
$time\
[](fg:#33658A)\
$character\
"""
command_timeout = 10000

# Disable the blank line at the start of the prompt
# add_newline = false

# You can also replace your username with a neat symbol like   or disable this
# and use the os module below
[username]
show_always = true
style_user = "bg:#9A348E"
style_root = "bg:#9A348E"
format = '[$user ]($style)'
disabled = false

# An alternative to the username module which displays a symbol that
# represents the current operating system
[os]
style = "bg:#9A348E"
disabled = false # Disabled by default

[os.symbols]
#Macos = " "
Macos = "🍏 "
Windows = " "

[directory]
format = "[ 📁 $path ]($style)"
style = "bg:#DA627D"
truncation_length = 3
truncate_to_repo = true # truncates directory to root folder if in github repo
truncation_symbol = "…/"

# Here is how you can shorten some long paths by text replacement
# similar to mapped_locations in Oh My Posh:
[directory.substitutions]
"Documents" = "󰈙 "
"Downloads" = " "
"Music" = " "
"Pictures" = " "
# Keep in mind that the order matters. For example:
# "Important Documents" = " 󰈙 "
# will not be replaced, because "Documents" was already substituted before.
# So either put "Important Documents" before "Documents" or use the substituted version:
# "Important 󰈙 " = " 󰈙 "

[c]
symbol = " "
style = "bg:#86BBD8"
format = '[ $symbol($version) ]($style)'

[docker_context]
symbol = " "
style = "bg:#06969A"
format = '[ $symbol$context]($style)'

[elixir]
symbol = " "
style = "bg:#86BBD8"
format = '[ $symbol($version) ]($style)'

[elm]
symbol = " "
style = "bg:#86BBD8"
format = '[ $symbol($version) ]($style)'

[git_branch]
#symbol = " "
symbol = ""
truncation_symbol = "…"
truncation_length = 40
style = "bg:#FCA17D"
format = '[ $symbol$branch(:$remote_branch) ]($style)'

[git_commit]
commit_hash_length = 7
tag_symbol = "🏷"
tag_disabled = false
tag_max_candidates = 0
only_detached = true
style = "bg:#FCA17D"
format = '[$hash $tag_symbol$tag]($style)'

[git_state]
style = "bg:#FCA17D"
rebase ="REBASING"
merge = "MERGING"
revert = "REVERTING"
bisect = "BISECTING"
am = "AM"
am_or_rebase = "AM/REBASE"
cherry_pick = '[🍒 PICKING](bold red)'
format = '[\($state( $progress_current of $progress_total)\)]($style) '

[git_status]
up_to_date = '✅'
#up_to_date = '✓'
conflicted = "⚔️"
ahead = "⬆️×${count}"
behind = "⬇️×${count}"
diverged = "🔱×${↑ahead_count}×${↓behind_count}"
untracked = "❔×${count}"
stashed = "📦"
modified = "📝×${count}"
staged = "🗃️×${count}"
renamed = "📛×${count}"
deleted = "🗑️×${count}"
style = "bg:#FCA17D"
format = '[$all_status$ahead_behind ]($style)'

[git_metrics]
added_style = "bg:#FCA17D"
deleted_style = "bg:#FCA17D"
disabled = false
format = '([📊{+$added]($added_style))([,-$deleted}]($deleted_style))'


[golang]
symbol = ""
style = "bg:#86BBD8"
format = '[ $symbol ($version)]($style)'

[gradle]
style = "bg:#86BBD8"
format = '[ $symbol($version) ]($style)'

[haskell]
symbol = ""
style = "bg:#86BBD8"
format = '[ $symbol ($version) ]($style)'

[java]
symbol = ""
detect_extensions = [ "java", "class", "jar", "gradle", "clj", "cljc" ]
detect_files = ['pom.xml', 'build.gradle.kts', 'build.sbt', '.java-version', 'deps.edn', 'project.clj', 'build.boot', '.sdkmanrc']
style = "bg:#86BBD8"
format = '[ $symbol ($version) ]($style)'

[julia]
symbol = ""
style = "bg:#86BBD8"
format = '[ $symbol ($version) ]($style)'

[nodejs]
detect_extensions = ['js', 'mjs', 'cjs', 'ts', 'mts', 'cts']
detect_files = ["package.json", ".node-version"]
detect_folders = ["node_modules"]
not_capable_style = 'bold red'
symbol = ""
style = "bg:#86BBD8"
format = '[ $symbol ($version) ($engines_version)]($style)'

[nim]
symbol = "󰆥"
style = "bg:#86BBD8"
format = '[ $symbol ($version) ]($style)'

[rust]
detect_extensions =[ "rs" ]
detect_files =[ "Cargo.toml" ]
symbol = ""
style = "bg:#86BBD8"
format = '[$symbol ($version) ]($style)'

[scala]
symbol = ""
style = "bg:#86BBD8"
format = '[$symbol ($version) ]($style)'

[python]
python_binary = ['python', 'python3', 'python2']
detect_extensions =[ "py" ]
detect_files = [ "requirements.txt", ".python-version", "pyproject.toml", "Pipfile", "tox.ini", "setup.py", "__init__.py" ]
symbol = "🐍"
style = "bg:#86BBD8"
format = '[${symbol} ${pyenv_prefix}(${version} )(\($virtualenv\) )]($style)'

[terraform]
symbol = "💠"
style = "bg:#86BBD8"
format = '[$symbol $version$workspace]($style) '

[package]
symbol = "⬢"
#symbol = ""
style = "bg:#86BBD8"
format = '[$symbol $version]($style)'

[time]
disabled = false
time_format = "%R" # Hour:Minute Format
style = "bg:#33658A"
format = '[ 󱑍 $time ]($style)'

[character]
success_symbol = '[ ➜](bold green) '
error_symbol = '[ ✗](#E84D44) '

